version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: adonis_app
    env_file:
      - .env
    ports:
      - '3333:3333'
    environment:
      - TZ=${TZ}
      - PORT=${PORT}
      - HOST=${HOST}
      - LOG_LEVEL=${LOG_LEVEL}
      - APP_KEY=${APP_KEY}
      - NODE_ENV=${NODE_ENV}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_SSL=${DB_SSL}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - DRIVE_DISK=${DRIVE_DISK}
    networks:
      - app-network

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - app
      - certbot
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h; done'"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
