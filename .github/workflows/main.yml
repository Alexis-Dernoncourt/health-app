name: CI/CD Pipeline

on:
  push:
    tags:
      - 'v*.*.*-deploy'  # Déclenchement lors du push d'un tag correspondant à un format de version

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
          sparse-checkout: 'server'
          sparse-checkout-cone-mode: false

    - name: Move app files to root
      run: |
        ls -lah
        shopt -s dotglob
        mv server/* .
        rm -rf server
        ls -lah

    - name: Set environment variables
      run: |
        touch .env
        echo "TZ=${{ secrets.TZ }}" >> .env
        echo "PORT=${{ secrets.PORT }}" >> .env
        echo "HOST=${{ secrets.HOST }}" >> .env
        echo "LOG_LEVEL=${{ secrets.LOG_LEVEL }}" >> .env
        echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env
        echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> .env
        echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
        echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
        echo "DB_USER=${{ secrets.DB_USER }}" >> .env
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
        echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
        echo "DRIVE_DISK=${{ secrets.DRIVE_DISK }}" >> .env
        cat .env

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.16.0'

    - name: Build and Test
      run: |
        npm ci
        npm run build
        npm test

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: SSH into Server and Deploy
      uses: appleboy/ssh-action@v0.1.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          # Se connecter au serveur
          cd /home/ubuntu/adonis-app

          # Arrêter et supprimer tout conteneur existant
          docker stop adonisjs_app || true
          docker rm adonisjs_app || true

          # Supprimer l'ancienne image si elle existe
          docker rmi adonisjs-app:latest || true

          # Copier le code depuis le dépôt GitHub
          git pull origin main

          # Construire l'image Docker sur le serveur
          docker build -t adonisjs-app:latest .

          # Lancer un nouveau conteneur à partir de l'image construite
          docker run -d --name adonisjs_app -p 8080:8080 \
            --env-file .env \
            adonisjs-app:latest
          docker exec adonisjs_app node ace migration:run --force
