name: CI/CD Pipeline to O2Switch

on:
  push:
    tags:
      - 'v*.*.*-deploy' # Déclenchement lors du push d'un tag correspondant à un format de version

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          sparse-checkout: 'server'
          sparse-checkout-cone-mode: false

      - name: Move app files to root
        run: |
          ls -lah
          echo "Moving app files to root"
          shopt -s dotglob
          mv server/* .
          rm -rf server
          ls -a

      - name: Set environment variables
        run: |
          touch .env
          echo "TZ=${{ secrets.TZ }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "HOST=${{ secrets.HOST }}" >> .env
          echo "LOG_LEVEL=${{ secrets.LOG_LEVEL }}" >> .env
          echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env
          echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_SSL=${{ secrets.DB_SSL }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
          echo "DRIVE_DISK=${{ secrets.DRIVE_DISK }}" >> .env
          cat .env
          ls -a

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.16.0'

      - name: Build and Test
        run: |
          npm ci
          npm run build
          npm test

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy via FTP to O2Switch
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./dist # Dossier de build du projet
          server-dir: /www/health-app/ # Chemin distant sur le serveur O2Switch

      - name: SSH into Server and Run Migrations
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /www/health-app
            node ace migration:run --force
